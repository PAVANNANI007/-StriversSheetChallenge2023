import java.util.* ;

import java.io.*; 

public class Solution {

    public static int minSumPath(int[][] grid) {

        // Write your code here.

         int m = grid.length;

        int n = grid[0].length;

        int dp[][] = new int[m][n];

 

        for(int i = 0 ; i < m ; i++){

            for(int j = 0 ; j < n ; j++){

                if(i == 0 && j == 0){

                   //adding the value to the dp array

                    dp[i][j] = grid[0][0];

                    continue;

                }

 

                int up = Integer.MAX_VALUE;

                int left = Integer.MAX_VALUE;

                if(i > 0){

                //adding the current index value and the value present in the dp array in the up

                    up = grid[i][j] + dp[i-1][j];

                }

                if(j > 0){

                    left = grid[i][j] + dp[i][j-1];

                }

                dp[i][j] = Math.min(up , left);

            }

        }

        return dp[m-1][n-1];

    }

}
